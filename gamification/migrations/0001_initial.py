# Generated by Django 5.1.6 on 2025-03-11 10:02

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('icon', models.CharField(max_length=50, verbose_name='Icon')),
                ('requirement_type', models.CharField(choices=[('polls_created', 'Polls Created'), ('polls_participated', 'Polls Participated'), ('discussions_created', 'Discussions Created'), ('comments_made', 'Comments Made'), ('points_earned', 'Points Earned'), ('impact_reports', 'Impact Reports'), ('volunteer_signups', 'Volunteer Signups')], max_length=20, verbose_name='Requirement Type')),
                ('requirement_count', models.PositiveIntegerField(verbose_name='Requirement Count')),
                ('level', models.CharField(choices=[('bronze', 'Bronze'), ('silver', 'Silver'), ('gold', 'Gold'), ('platinum', 'Platinum')], default='bronze', max_length=10, verbose_name='Level')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Badge',
                'verbose_name_plural': 'Badges',
            },
        ),
        migrations.CreateModel(
            name='BadgeAward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('awarded_at', models.DateTimeField(auto_now_add=True)),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='awards', to='gamification.badge', verbose_name='Badge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='badge_awards', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Badge Award',
                'verbose_name_plural': 'Badge Awards',
                'unique_together': {('user', 'badge')},
            },
        ),
        migrations.AddField(
            model_name='badge',
            name='users',
            field=models.ManyToManyField(related_name='badges', through='gamification.BadgeAward', to=settings.AUTH_USER_MODEL, verbose_name='Users'),
        ),
        migrations.CreateModel(
            name='Leaderboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('leaderboard_type', models.CharField(choices=[('overall', 'Overall Points'), ('polls', 'Polls'), ('discussions', 'Discussions'), ('comments', 'Comments'), ('volunteer', 'Volunteer')], default='overall', max_length=15, verbose_name='Leaderboard Type')),
                ('time_period', models.CharField(choices=[('all_time', 'All Time'), ('this_month', 'This Month'), ('this_week', 'This Week'), ('today', 'Today')], default='all_time', max_length=10, verbose_name='Time Period')),
                ('max_entries', models.PositiveIntegerField(default=10, verbose_name='Maximum Entries')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Leaderboard',
                'verbose_name_plural': 'Leaderboards',
                'unique_together': {('leaderboard_type', 'time_period')},
            },
        ),
        migrations.CreateModel(
            name='PointTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('poll_creation', 'Poll Creation'), ('poll_participation', 'Poll Participation'), ('discussion_creation', 'Discussion Creation'), ('comment', 'Comment'), ('sharing', 'Sharing'), ('impact_report', 'Impact Report'), ('volunteer_signup', 'Volunteer Signup'), ('bonus', 'Bonus')], max_length=20, verbose_name='Transaction Type')),
                ('points', models.PositiveIntegerField(verbose_name='Points')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='Description')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='Object ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype', verbose_name='Content Type')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='point_transactions', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Point Transaction',
                'verbose_name_plural': 'Point Transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserPoints',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_points', models.PositiveIntegerField(default=0, verbose_name='Total Points')),
                ('poll_creation_points', models.PositiveIntegerField(default=0, verbose_name='Poll Creation Points')),
                ('poll_participation_points', models.PositiveIntegerField(default=0, verbose_name='Poll Participation Points')),
                ('discussion_points', models.PositiveIntegerField(default=0, verbose_name='Discussion Points')),
                ('comment_points', models.PositiveIntegerField(default=0, verbose_name='Comment Points')),
                ('sharing_points', models.PositiveIntegerField(default=0, verbose_name='Sharing Points')),
                ('impact_points', models.PositiveIntegerField(default=0, verbose_name='Impact Points')),
                ('volunteer_points', models.PositiveIntegerField(default=0, verbose_name='Volunteer Points')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='points', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Points',
                'verbose_name_plural': 'User Points',
            },
        ),
    ]

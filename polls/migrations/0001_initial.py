# Generated by Django 5.1.6 on 2025-03-11 10:02

import django.db.models.deletion
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PollCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='Icon')),
            ],
            options={
                'verbose_name': 'Poll Category',
                'verbose_name_plural': 'Poll Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='QuestionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Question Type',
                'verbose_name_plural': 'Question Types',
            },
        ),
        migrations.CreateModel(
            name='Poll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('slug', models.SlugField(blank=True, unique=True, verbose_name='Slug')),
                ('description', models.TextField(verbose_name='Description')),
                ('poll_type', models.CharField(choices=[('public', 'Public'), ('anonymous', 'Anonymous'), ('institution', 'Institution-specific')], default='public', max_length=15, verbose_name='Poll Type')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('closed', 'Closed'), ('archived', 'Archived')], default='active', max_length=10, verbose_name='Status')),
                ('start_date', models.DateTimeField(verbose_name='Start Date')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='End Date')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Featured')),
                ('allow_comments', models.BooleanField(default=True, verbose_name='Allow Comments')),
                ('allow_sharing', models.BooleanField(default=True, verbose_name='Allow Sharing')),
                ('restricted_to_institution', models.CharField(blank=True, max_length=100, verbose_name='Restricted to Institution')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_polls', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='polls', to='polls.pollcategory', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Poll',
                'verbose_name_plural': 'Polls',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PollTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('is_public', models.BooleanField(default=False, verbose_name='Public Template')),
                ('template_data', models.JSONField(verbose_name='Template Data')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='templates', to='polls.pollcategory', verbose_name='Category')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_templates', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
            ],
            options={
                'verbose_name': 'Poll Template',
                'verbose_name_plural': 'Poll Templates',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Question Text')),
                ('is_required', models.BooleanField(default=True, verbose_name='Required')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Order')),
                ('min_value', models.IntegerField(blank=True, null=True, verbose_name='Minimum Value')),
                ('max_value', models.IntegerField(blank=True, null=True, verbose_name='Maximum Value')),
                ('step_value', models.FloatField(blank=True, null=True, verbose_name='Step Value')),
                ('settings', models.JSONField(blank=True, null=True, verbose_name='Settings')),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='polls.poll', verbose_name='Poll')),
                ('question_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='polls.questiontype', verbose_name='Question Type')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
                'ordering': ['poll', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255, verbose_name='Choice Text')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Order')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='polls.question', verbose_name='Question')),
            ],
            options={
                'verbose_name': 'Choice',
                'verbose_name_plural': 'Choices',
                'ordering': ['question', 'order'],
            },
        ),
        migrations.CreateModel(
            name='PollResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response_data', models.TextField(verbose_name='Response Data')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='poll_responses', to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='polls.question', verbose_name='Question')),
            ],
            options={
                'verbose_name': 'Poll Response',
                'verbose_name_plural': 'Poll Responses',
                'unique_together': {('question', 'user')},
            },
        ),
    ]
